# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: "3.8"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Chispa testing with Pytest
      run: pytest
    - name: Build wheel
      run: poetry build
# python -m pip install --user --upgrade build
# python -m build
# find ./dist/*.whl | xargs pip install
    - name: Configure Git
      run: |
        git config --global user.email "tiago.carvalho@capgemini.com"
        git config --global user.name "tiagocarvalhocapgemini"
    - name: Commit and push wheel
      run: |
        git add -f ./dist/*.whl
        git commit -m 'pushing new wheel'
        git push
    - run: echo "üçè This job's status is ${{ job.status }}."